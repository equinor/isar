[DEFAULT]
# Determines which robot package ISAR will attempt to import
# Name must match with an installed python package in the local environment
robot_package = isar_robot

# Determines the local path in which results from missions are stored
local_storage_path = ./results

# Timeout in seconds for direct HTTP requests made through the RequestHandler
request_timeout = 30

# Timeout in seconds for checking whether there is a message on a queue
queue_timeout = 10

# Sleep time for while loops in the finite state machine in seconds
# The sleep is used to throttle the system on every iteration in the loop
fsm_sleep_time = 0.1

# Location of JSON files containing predefined missions for the Local Planner to use
predefined_missions_folder = src/isar/config/predefined_missions/

# Name of default map transformation
default_map = default_map

# Location of JSON files containing predefined maps
maps_folder = src/isar/config/maps/

# Determines the number of state transitions that are kept in the log
state_transitions_log_length = 20

# Number of attempts to send a mission before cancelling
send_failure_counter_limit = 10

# Number of attempts to stop the robot before giving up
stop_robot_attempts_limit = 10

# FastAPI host
api_host = localhost

# FastAPI port
api_port = 3000

[modules]
# Determines which mission planner module is used by ISAR
# Options: [local echo]
# Selecting a different mission planner module than local may require certain access rights
mission_planner = local

# Determines which storage modules are used by ISAR
# Comma separated list of modules to use. Each module will be called when storing results from inspections
# Options [local blob slimm]
# Selecting a different storage module than local may require certain access rights
storage = local

# Determines whether the MQTT publishing module should be enabled or not
# The publishing module will attempt to connect to the MQTT broker configured in "service_connections"
# Options: [false true]
mqtt_enabled = false

[authentication]
# Determines whether authentication is enabled for the API or not
# Enabling this requires certain resources available for OAuth2 authentication
# Currently supported authentication is Azure AD (https://github.com/Intility/fastapi-azure-auth)
authentication_enabled = false

# Tenant ID for the Azure tenant with your Azure Active Directory application
azure_tenant_id = 3aa4a235-b6e2-48d5-9195-7fcf05b459b0

# Client ID for the API client
app_client_id = 68cca82d-84e7-495c-96b4-4c32509f2a46

# Client ID for the OpenAPI client
openapi_client_id = 5f412c20-8c36-4c69-898f-d2b5051f5fb6

[service_connections]
# MQTT username
# The username and password is set by the MQTT broker and must be known in advance
# The password should be set as an environment variable "MQTT_PASSWORD"
# If the password is not set in the environment an empty string will be used
mqtt_username = mosquitto

# MQTT host
mqtt_host = localhost

# MQTT port
mqtt_port = 1883

# Keyvault name
keyvault = EqRobotKeyVault

# URL to storage account for Azure Blob Storage
blob_storage_account_url = https://eqrobotdevstorage.blob.core.windows.net

# Name of blob container in Azure Blob Storage [slimm test]
blob_container = test

# Client ID for STID App Registration
stid_client_id = 1734406c-3449-4192-a50d-7c3a63d3f57d

# Scope for access to STID API
stid_app_scope = .default

# URL for STID endpoint
stid_api_url = https://stidapi.equinor.com

# Plant name for the facility which STID should looks for tags in
stid_plant_name = kaa

# Client ID for Echo App Registration
echo_client_id = bf0b2569-e09c-42f0-8095-5a52a873eb7b

# Scope for access to Echo API
echo_app_scope = .default

# URL for Echo endpoint
echo_api_url = https://echohubapi.equinor.com/api

# Client ID for SLIMM App Registration
slimm_client_id = b4eab671-2fce-4162-a528-58b3879d974b

# Scope for access to SLIMM Ingestion API
slimm_app_scope = .default

# URL for SLIMM endpoint
slimm_api_url = https://slimmingestapidev.azurewebsites.net/api/Ingest

# Whether the results should be copied directly into the SLIMM datalake or only the metadata
copy_files_to_slimm_datalake = false

[metadata]
# The configuration of this section is tightly coupled with the metadata that is submitted with the results once
# they have been uploaded.

# Four digit code indicating facility
plant_code = 1320

# Name of the facility the robot is operating in
plant_name = Kårstø

# Shortname of the facility the robot is operating in
plant_short_name = KAA

# Country the robot is operating in
country = Norway

# Type of robot ISAR is monitoring
robot_type = robot

# Name or unique ID of robot
robot_id = william

# Data scheme the robot should adhere to
# Options [DS0001]
data_scheme = DS0001

# Coordinate reference system of facility
coordinate_reference_system = EQUINOR:4100001

# Vertical reference system of facility
vertical_reference_system = MSL

# Rotational representations of reported results
# Options [quaternion]
media_orientation_reference_system = quaternion

# Contractor who is responsible for robot missions
contractor = equinor

# Timezone
timezone = UTC+00:00

# Data classification
data_classification = internal

# Type of missions the robot performs
mission_type = inspection

[mqtt_topics]
isar_state = ${metadata:robot_id}/isar_state

isar_mission = ${metadata:robot_id}/isar_mission

isar_task_status = ${metadata:robot_id}/isar_task_status
